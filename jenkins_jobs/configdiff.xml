<project>
    <description>Config diff runner</description>
    <properties>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>source</name>
                    <defaultValue></defaultValue>
                    <description>Source version (e.g., CHF2 or CDH:gbn://123456)</description>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>target</name>
                    <defaultValue></defaultValue>
                    <description>Target version (e.g., CHF3 or CM:gbn://654321)</description>
                </hudson.model.StringParameterDefinition>
                <hudson.model.ChoiceParameterDefinition>
                    <name>dry_run</name>
                    <choices>
                        <string>true</string>
                        <string>false</string>
                    </choices>
                    <description>Dry run flag</description>
                </hudson.model.ChoiceParameterDefinition>
                <hudson.model.ChoiceParameterDefinition>
                    <name>launch_multiplier</name>
                    <choices>
                        <string>1</string>
                        <string>2</string>
                        <string>3</string>
                    </choices>
                    <description>Multiplier for running tests multiple times</description>
                </hudson.model.ChoiceParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <scm class="hudson.plugins.git.GitSCM">
        <userRemoteConfigs>
            <hudson.plugins.git.UserRemoteConfig>
                <url>https://github.com/torogeldiiev/diplomaWork</url>
            </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
            <hudson.plugins.git.BranchSpec>
                <name>origin/master</name>
            </hudson.plugins.git.BranchSpec>
        </branches>
    </scm>
    <buildWrappers>
        <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
            <bindings>
                <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
                    <credentialsId>env_vars</credentialsId>
                    <variable>ENV_FILE</variable>
                </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
            </bindings>
        </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    </buildWrappers>

    <builders>
        <hudson.tasks.Shell>
        <command>
            #!/bin/bash
            echo "ENV_FILE: $ENV_FILE"

            if [ -f "$ENV_FILE" ]; then
                echo "File exists: $ENV_FILE"
                cp "$ENV_FILE" configs/local.env
                # Source the environment variables
                set -a
                source configs/local.env
                set +a
                echo "Environment file copied and sourced"
            else
                echo "File does not exist or is not accessible."
                echo "Current directory: $(pwd)"
                echo "Directory contents:"
                ls -la
                exit 1
            fi

            # Print environment variables for debugging (mask sensitive info)
            echo "Checking environment variables..."
            echo "SQL_USR is set: [${SQL_USR:+yes}]"
            echo "SQL_DB is set: [${SQL_DB:+yes}]"
            echo "SQL_HOST is set: [${SQL_HOST:+yes}]"

            # Create virtual environment if it doesn't exist
            if [ ! -d "venv" ]; then
                python3 -m venv venv
            fi

            # Activate virtual environment
            source venv/bin/activate
            pwd
            ls -l
            # Install dependencies
            pip install -r server/requirements.txt

            # Run tests with environment variables
            PYTHONPATH=$(pwd) pytest server/test/test_config_diff.py -v
        </command>
    </hudson.tasks.Shell>
    </builders>
</project>
