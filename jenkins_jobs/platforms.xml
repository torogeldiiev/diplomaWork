<project>
  <description>Platform tests runner</description>

  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>cluster</name>
          <defaultValue></defaultValue>
          <description>Cluster name to run platform tests on</description>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>

  <scm class="hudson.plugins.git.GitSCM">
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/torogeldiiev/diplomaWork</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
  </scm>

  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <credentialsId>env_vars</credentialsId>
          <variable>ENV_FILE</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>

  <builders>
    <hudson.tasks.Shell>
      <command>
        #!/bin/bash
        echo "ENV_FILE: $ENV_FILE"

        mkdir -p configs
        chmod -R 777 configs

        if [ -f "$ENV_FILE" ]; then
          touch configs/local.env
          chmod 666 configs/local.env
          cat "$ENV_FILE" > configs/local.env
          set -a; source configs/local.env; set +a
          echo "Environment file copied and sourced"
        else
          echo "ENV_FILE not found: $(pwd)"
          ls -la
          exit 1
        fi

        if [ ! -d "venv" ]; then
          python3 -m venv venv
        fi
        source venv/bin/activate

        pip install -r server/requirements.txt

        # Run the Platform pytest suite
        PYTHONPATH=$(pwd) pytest server/test/test_platform.py \
          -v --json-report --json-report-file=report.json
      </command>
    </hudson.tasks.Shell>
  </builders>

  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>report.json</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
</project>
