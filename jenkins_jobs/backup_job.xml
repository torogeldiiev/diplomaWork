<project>
  <description>Daily App DB Backup Runner</description>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 2 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>

  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.FileParameterDefinition>
          <name>ENV_FILE</name>
          <description>Upload .env file containing DB_HOST, DB_USER, DB_PASS, DB_NAME</description>
        </hudson.model.FileParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>

  <scm class="hudson.plugins.git.GitSCM">
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/torogeldiiev/diplomaWork</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
  </scm>

  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <credentialsId>env_vars</credentialsId>
          <variable>ENV_FILE</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>

  <builders>
    <hudson.tasks.Shell>
      <command>
        #!/bin/bash
        set -euo pipefail

        echo "Loading ENV_FILE: $ENV_FILE"
        if [ ! -f "$ENV_FILE" ]; then
          echo "ERROR: ENV_FILE not found!"
          exit 1
        fi
        cp "$ENV_FILE" configs/local.env
        set -a; source configs/local.env; set +a
        echo "ENV loaded."
        source venv/bin/activate

        # Create backup filename
        TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
        BACKUP_FILE="db_backup_${TIMESTAMP}.sql"

        echo "Dumping database $DB_NAME from $DB_HOST..."
        export PGPASSWORD="$DB_PASS"
        pg_dump -h "$DB_HOST" -U "$DB_USER" "$DB_NAME" > "$BACKUP_FILE"
        echo "Backup written to $BACKUP_FILE"
      </command>
    </hudson.tasks.Shell>
  </builders>

  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>db_backup_*.sql</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
</project>
